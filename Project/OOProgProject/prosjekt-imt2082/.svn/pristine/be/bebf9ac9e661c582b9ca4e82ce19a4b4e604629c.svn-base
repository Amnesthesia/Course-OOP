/****************************************************************************
	class:        Hotell
	read:         <forkortet hotellnavn>.dta
	write:        <forkortet hotellnavn>.dta
	author:       ...

	description:  ...
*****************************************************************************/

/* --------------------------------------
           INCLUDED DEPENDENCIES
   -------------------------------------*/
#include <iostream>
#include "hotellClass.h"

/* --------------------------------------
             USED NAMESPACE
   -------------------------------------*/
using namespace std;

/* --------------------------------------
		   FUNCTION DEFINITIONS
   -------------------------------------*/
Hotell::Hotell()
{
	cout << "Constructor..." << endl;

	availableRooms = new List[3];
	rooms = new List[3];

	rooms[SINGLE].is_empty();
}

Hotell::~Hotell()
{
	cout << "destructor..." << endl;

	delete [] availableRooms;
}

/******************************************************************************
	name:        getAvailableRoom()
	description: Returns a randomly selected number of an available room of the selected type
                 Returns 0 if no room of selected category is available,
                 and -1 if no rooms at all are available.
	parameters:  int type
******************************************************************************/

int Hotell::getAvailableRoom(int type)
{
    // Return -1 if no rooms whatsoever are available at this hotel
    if(availableRooms[SINGLE].is_empty() && availableRooms[DOUBLE].is_empty() && availableRooms[SUITE].is_empty())
        return -1;

    // Return 0 if no room of the selected type is available at this hotel
    if(availableRooms[type].is_empty())
        return 0;


    // ... and return a random element from our list like so:
    Num_element* roomnum = (Num_element*) availableRooms[type].remove_no(1);

    return 0;
}

int Hotell::setAvailableRoom(int roomID)
{

}
